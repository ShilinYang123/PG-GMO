{
  "name": "品牌名称可用性检查器",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "filePath": "S:/PG-GMO/02-Input/工作任务20-自动化品牌名称可用性检查器/brand_names.csv"
      },
      "name": "Read Binary File",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        450,
        300
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Spreadsheet",
      "type": "n8n-nodes-base.spreadsheet",
      "typeVersion": 1,
      "position": [
        650,
        300
      ]
    },
    {
      "parameters": {
        "batchSize": 1
      },
      "name": "Item Lists",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [
        850,
        300
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Item Iterator",
      "type": "n8n-nodes-base.itemIterator",
      "typeVersion": 1,
      "position": [
        1050,
        300
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://www.whoisxmlapi.com/whoisserver/WhoisService",
        "options": {},
        "queryParameters": {
          "parameters": [
            {
              "name": "apiKey",
              "value": "YOUR_WHOISXML_API_KEY"
            },
            {
              "name": "domainName",
              "value": "={{ $json[\"name\"] }}.com"
            },
            {
              "name": "outputFormat",
              "value": "JSON"
            }
          ]
        }
      },
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1250,
        200
      ]
    },
    {
      "parameters": {
        "functionCode": "const domainStatus = $input.all()[0].json.status;\nconst isDomainAvailable = domainStatus && domainStatus.includes(\"available\");\n\nreturn {\n  json: {\n    name: $input.all()[1].json.name,\n    com_domain: `${$input.all()[1].json.name}.com`,\n    domain_available: isDomainAvailable ? \"✅\" : \"❌\"\n  }\n};"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1450,
        200
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://people.googleapis.com/v1/people:search",
        "options": {},
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $json[\"name\"] }}"
            },
            {
              "name": "sectionTypes",
              "value": "PRIMARY"
            },
            {
              "name": "personFields",
              "value": "names"
            },
            {
              "name": "key",
              "value": "YOUR_GOOGLE_API_KEY"
            }
          ]
        }
      },
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1250,
        400
      ]
    },
    {
      "parameters": {
        "functionCode": "const youtubeResults = $input.all()[0].json.results;\nconst isYoutubeAvailable = !youtubeResults || youtubeResults.length === 0;\n\nreturn {\n  json: {\n    ...$input.all()[1].json,\n    youtube_handle: `@${$input.all()[1].json.name}`,\n    youtube_available: isYoutubeAvailable ? \"✅\" : \"❌\"\n  }\n};"
      },
      "name": "Function1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1450,
        400
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Item Lists1",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [
        1650,
        300
      ]
    },
    {
      "parameters": {
        "fileName": "brand_availability_results_{{ Date.now() }}.csv"
      },
      "name": "Write Binary File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1850,
        300
      ]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Read Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Binary File": {
      "main": [
        [
          {
            "node": "Spreadsheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet": {
      "main": [
        [
          {
            "node": "Item Lists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists": {
      "main": [
        [
          {
            "node": "Item Iterator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Iterator": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Item Lists1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Function1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function1": {
      "main": [
        [
          {
            "node": "Item Lists1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists1": {
      "main": [
        [
          {
            "node": "Write Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "_placeholder"
}