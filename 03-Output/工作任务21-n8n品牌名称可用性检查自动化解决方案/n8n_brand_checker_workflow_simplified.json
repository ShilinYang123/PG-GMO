{
  "name": "品牌名称可用性检查工作流（简化版）",
  "nodes": [
    {
      "parameters": {},
      "id": "f6b4c5d7-8e9f-4a1b-2c3d-567890abcdef",
      "name": "手动触发",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// 品牌名称列表\nconst testBrands = [\n  'HaloQuip',\n  'hqpmade',\n  'hqpelectric',\n  'hqpfactory',\n  'TestBrand1'\n];\n\nconsole.log('使用测试品牌数据:', testBrands);\n\nreturn testBrands.map(name => ({\n  json: { name: name }\n}));"
      },
      "id": "b2c3d4e5-f6g7-8901-2345-678901bcdefg",
      "name": "品牌数据",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "https://dns.google/resolve?name={{ $json.name }}.com&type=A",
        "options": {
          "timeout": 15000
        }
      },
      "id": "c3d4e5f6-g7h8-9012-3456-789012cdefgh",
      "name": "检查域名",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 200],
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "https://www.youtube.com/@{{ $json.name }}",
        "options": {
          "timeout": 15000,
          "redirect": {
            "followRedirects": true,
            "maxRedirects": 3
          }
        },
        "headers": {
          "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
        }
      },
      "id": "d4e5f6g7-h8i9-0123-4567-890123defghi",
      "name": "检查YouTube",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 400],
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// 合并检查结果\n// 获取当前处理的品牌名称\nconst brandName = $input.first().json.name;\n\n// 获取所有输入数据\nconst allInputs = $input.all();\nlet domainResult = null;\nlet youtubeResult = null;\n\n// 查找域名和YouTube检查结果\nfor (const input of allInputs) {\n  if (input.json && input.json.Answer) {\n    domainResult = input;\n  } else if (input.json && typeof input.json === 'string') {\n    youtubeResult = input;\n  }\n}\n\n// 分析域名可用性\nlet domainAvailable = 'unknown';\nlet domainStatus = 'error';\n\nif (domainResult && domainResult.json) {\n  if (domainResult.json.Status === 3) {\n    domainAvailable = true;\n    domainStatus = 'NXDOMAIN - 可注册';\n  } else if (domainResult.json.Status === 0) {\n    domainAvailable = false;\n    domainStatus = 'NOERROR - 已注册';\n  }\n}\n\n// 分析YouTube可用性\nlet youtubeAvailable = 'unknown';\nlet youtubeStatus = 'error';\n\nif (youtubeResult) {\n  if (youtubeResult.statusCode === 404) {\n    youtubeAvailable = true;\n    youtubeStatus = '404 - 用户名可用';\n  } else if (youtubeResult.statusCode === 200) {\n    youtubeAvailable = false;\n    youtubeStatus = '200 - 用户名已占用';\n  } else {\n    youtubeStatus = `HTTP ${youtubeResult.statusCode || 'unknown'}`;\n  }\n}\n\nconst result = {\n  name: brandName,\n  domainAvailable: domainAvailable,\n  domainStatus: domainStatus,\n  youtubeAvailable: youtubeAvailable,\n  youtubeStatus: youtubeStatus,\n  checkTime: new Date().toISOString()\n};\n\nconsole.log('检查结果:', result);\n\nreturn [{ json: result }];"
      },
      "id": "e5f6g7h8-i9j0-1234-5678-901234efghij",
      "name": "合并结果",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// 收集所有结果并生成最终报告\nconst allResults = items.map(item => item.json);\n\n// 生成CSV格式的内容\nconst headers = ['name', 'domainAvailable', 'domainStatus', 'youtubeAvailable', 'youtubeStatus', 'checkTime'];\nlet csvContent = headers.join(',') + '\\n';\n\nallResults.forEach(result => {\n  const row = headers.map(header => {\n    let value = result[header] || '';\n    if (typeof value === 'string' && value.includes(',')) {\n      value = `\"${value}\"`; \n    }\n    return value;\n  });\n  csvContent += row.join(',') + '\\n';\n});\n\n// 生成汇总统计\nconst summary = {\n  totalChecked: allResults.length,\n  domainsAvailable: allResults.filter(r => r.domainAvailable === true).length,\n  youtubeAvailable: allResults.filter(r => r.youtubeAvailable === true).length,\n  bothAvailable: allResults.filter(r => r.domainAvailable === true && r.youtubeAvailable === true).length\n};\n\nconsole.log('检查完成，汇总结果:', summary);\nconsole.log('CSV内容:', csvContent);\n\nreturn [{\n  json: {\n    summary: summary,\n    results: allResults,\n    csvContent: csvContent,\n    message: `品牌检查完成！共检查${summary.totalChecked}个品牌，其中${summary.bothAvailable}个品牌的域名和YouTube用户名都可用。`\n  }\n}];"
      },
      "id": "f6g7h8i9-j0k1-2345-6789-012345fghijk",
      "name": "生成最终报告",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    }
  ],
  "connections": {
    "手动触发": {
      "main": [
        [
          {
            "node": "品牌数据",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "品牌数据": {
      "main": [
        [
          {
            "node": "检查域名",
            "type": "main",
            "index": 0
          },
          {
            "node": "检查YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "检查域名": {
      "main": [
        [
          {
            "node": "合并结果",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "检查YouTube": {
      "main": [
        [
          {
            "node": "合并结果",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "合并结果": {
      "main": [
        [
          {
            "node": "生成最终报告",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "3",
  "id": "brand-checker-workflow-v3",
  "meta": {
    "instanceId": "local"
  }
}